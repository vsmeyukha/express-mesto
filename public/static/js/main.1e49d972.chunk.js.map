{"version":3,"sources":["components/Header.js","images/pencil.svg","images/plus.svg","contexts/CurrentUserContext.js","components/Profile.js","components/Card.js","components/Cards.js","components/Main.js","components/Footer.js","components/PopupWithImage.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","currentUserContext","React","createContext","Profile","props","useContext","name","about","avatar","onClick","onEditAvatar","src","pencil","alt","onEditProfile","onAddPlace","plus","Card","_id","isOwn","card","owner","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onCardClick","onCardDelete","onLikeClick","length","Cards","cards","map","onCardLike","Main","Footer","PopupWithImage","type","onClose","api","apiKey","baseUrl","this","headers","authorization","url","method","body","fetch","then","res","ok","json","Promise","reject","_getResponseData","obj","JSON","stringify","id","all","getUserInfo","getInitialCards","addALike","deleteLike","PopupWithForm","isOpen","title","noValidate","onSubmit","children","value","EditProfilePopup","useState","username","setUsername","description","setDescription","thisUser","useEffect","e","preventDefault","onUpdateUser","placeholder","required","minLength","maxLength","onChange","target","EditAvatarPopup","avatarInputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","cardNameInputRef","cardLinkInputRef","App","currentUser","setCurrentUser","data","catch","err","console","error","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","cardForDeleting","cardsWithoutACard","filter","editProfile","changeAvatar","addNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e49d972.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <div className=\"logo\"></div>\n    </header>\n  );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/pencil.8667ac4a.svg\";","export default __webpack_public_path__ + \"static/media/plus.d86bb2ed.svg\";","import React from 'react';\n\nconst currentUserContext = React.createContext('currentUserContext');\n\nexport default currentUserContext;","import React from 'react';\n// import cousteau from '../images/cousteau.jpg';\nimport pencil from '../images/pencil.svg';\nimport plus from '../images/plus.svg';\nimport currentUserContext from '../contexts/CurrentUserContext';\n\n\nfunction Profile(props) {\n\n  // ! Подписываем компонент Profile на контекст\n  const { name, about, avatar } = React.useContext(currentUserContext);\n\n  return (\n    <section className=\"profile\">\n\n      <div className=\"profile__avatar\">\n        <button\n          className=\"profile__avatar-button\"\n          onClick={props.onEditAvatar}\n        >\n          <img\n            src={pencil}\n            alt=\"карандаш\"\n            className=\"profile__avatar-pencil\"\n          />\n        </button>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className=\"profile__avatar-image\" />\n      </div>\n\n      <h1 className=\"profile__name\">{ name }</h1>\n      <p className=\"profile__regalia\">{ about }</p>\n\n      <button\n        className=\"profile__edit-button\"\n        onClick={props.onEditProfile}\n      >\n        <img\n          src={pencil}\n          alt=\"карандаш\"\n          className=\"profile__pencil\"\n        />\n      </button>\n\n      <button\n        className=\"profile__add-button\"\n        onClick={props.onAddPlace}\n      >\n        <img\n          src={plus}\n          alt=\"плюс\"\n          className=\"profile__plus\"\n        />\n      </button>\n\n    </section>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport currentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n\n  // ! подписываем компонент Card на контекст\n  const { _id } = React.useContext(currentUserContext);\n  // debugger;\n  const isOwn = props.card.owner._id === _id;\n\n  const cardDeleteButtonClassName = (`card__delete-card ${isOwn ? '' : 'card__delete-card_invisible'}`);\n\n  const isLiked = props.card.likes.some(i => i._id === _id);\n\n  const cardLikeButtonClassName = (`card__like-button ${isLiked ? 'card__like-button_active' : ''}`); \n\n  function handleClick() {\n    props.onCardClick(props.card);\n  } \n\n  return (\n    <div className=\"card\">\n      <img\n        src={props.card.link}\n        alt={props.card.name}\n        className=\"card__img\" onClick={() => handleClick(props.card.link)} />\n      <button className={cardDeleteButtonClassName} onClick={props.onCardDelete}></button>\n      <div className=\"card__name\">\n        <h2 className=\"card__title\">{props.card.name}</h2>\n        <div className=\"card__like\">\n          <button className={cardLikeButtonClassName} onClick={props.onLikeClick}></button>\n          <p className=\"card__like-scope\">{props.card.likes.length}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nfunction Cards(props) {\n\n  return (\n    <section className=\"cards\" >\n      {props.cards.map(card => {\n\n        return (\n\n          <Card\n            card={card}\n            key={card._id}\n            onCardClick={props.onCardClick}\n            onLikeClick={() => props.onCardLike(card)}\n            onCardDelete={() => props.onCardDelete(card)}\n          />\n        );\n      })}\n    </section>\n  );\n}\n\nexport default Cards;","import React from 'react';\nimport Profile from './Profile';\nimport Cards from './Cards';\n\nfunction Main(props) {\n\n  return (\n    <main className=\"main\">\n      <Profile\n        onEditProfile={props.onEditProfile}\n        onAddPlace={props.onAddPlace}\n        onEditAvatar={props.onEditAvatar}\n      />\n      <Cards\n        onCardClick={props.onCardClick}\n        cards={props.cards}\n        onCardLike={props.onCardLike}\n        onCardDelete={props.onCardDelete}\n      />\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__info\">&copy;\t 2020 Mesto Russia. Dev: Victor Smeyukha</p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithImage(props) {\n\n  return (\n    <div className={`photo-popup ${props.card ? 'popup_opened' : ''}`}>\n      <figure className=\"photo-popup__container\">\n        <button className=\"popup__close-button popup__close-button_type_photo-popup\" type=\"button\" onClick={props.onClose}></button>\n        <img src={props.card.link} alt={props.card.name} className=\"photo-popup__image\" />\n        <figcaption className=\"photo-popup__caption\">{props.card.name}</figcaption>\n      </figure>\n    </div>\n  )\n}\n\nexport default PopupWithImage;","class Api {\n  constructor(apiKey, baseUrl) {\n    this.headers = {\n      authorization: apiKey\n    };\n    this.baseUrl = baseUrl\n  }\n\n  _getResponseData(url, method, headers, body) {\n    return fetch(url, {\n      method: method,\n      headers: headers,\n      body: body\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();  \n        } else {\n          return Promise.reject();\n        }\n      });\n  }\n\n  getInitialCards() {\n    return this._getResponseData(`${this.baseUrl}/cards`, 'GET', this.headers);\n  }\n\n  addNewCard(obj) {\n    return this._getResponseData(`${this.baseUrl}/cards`, 'POST', { ...this.headers, 'Content-Type': 'application/json' }, JSON.stringify(obj));\n  }\n\n  deleteCard(id) {\n    return this._getResponseData(`${this.baseUrl}/cards/${id}`, 'DELETE', this.headers);\n  }\n\n  getUserInfo() {\n    return this._getResponseData(`${this.baseUrl}/users/me`, 'GET', this.headers);\n  }\n  \n  getAllNeededData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  editProfile(obj) {\n    return this._getResponseData(`${this.baseUrl}/users/me`, 'PATCH', { ...this.headers, 'Content-Type': 'application/json' }, JSON.stringify(obj));\n  }\n\n  changeAvatar(obj) {\n    return this._getResponseData(`${this.baseUrl}/users/me/avatar`, 'PATCH', { ...this.headers, 'Content-Type': 'application/json' }, JSON.stringify(obj));\n  }\n\n  addALike(id) {\n    return this._getResponseData(`${this.baseUrl}/cards/likes/${id}`, 'PUT', this.headers);\n  }\n\n  deleteLike(id) {\n    return this._getResponseData(`${this.baseUrl}/cards/likes/${id}`, 'DELETE', this.headers);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.addALike(id);\n    }\n    else {\n      return this.deleteLike(id);\n    }\n\n  }\n}\n\nconst api = new Api('2dbd0122-ea43-4557-862d-f5c5a66a918e', 'https://mesto.nomoreparties.co/v1/cohort-18');\nexport default api;","import React from 'react';\n\nfunction PopupWithForm(props) {\n\n  return (\n    <div className={\n      `popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`\n    }>\n      \n      <div className=\"popup__container\">\n        <button className=\"popup__close-button popup__close-button_type_popup-with-forms\" type=\"button\" onClick={props.onClose}></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        <form className={`popup__form popup__form_type_${props.name}`} name={props.name} noValidate onSubmit={props.onSubmit}>\n            <fieldset className={`popup__fieldset popup__fieldset_type_${props.name}`}>\n              {props.children}\n            </fieldset>\n            <button type=\"submit\" className=\"popup__submit\" value=\"Сохранить\" name=\"submit\">Сохранить</button>\n          </form>\n      </div>\n\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport currentUserContext from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n  // ! объявляем стейт-переменные, которые будут привязаны к полям ввода формы и сделают их управляемыми\n  const [username, setUsername] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const thisUser = React.useContext(currentUserContext);\n  \n  React.useEffect(() => {\n    setUsername(thisUser.name);\n    setDescription(thisUser.about);\n  }, [thisUser]);\n\n  // ! функция изменения значения инпута имени\n  function handleUsernameChange(e) {\n    setUsername(e.target.value);\n  }\n\n    // ! функция изменения значения инпута описания\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  // ! функция сабмита формы\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // ! Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: username,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Как звать-то тебя?\"\n      name=\"user-info\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n              <input\n                type=\"text\"\n                className=\"popup__input popup__input_type_name\"\n                placeholder=\"Имя\"\n                name=\"user-name\"\n                required\n                minLength=\"2\"\n                maxLength=\"40\"\n                id=\"user-name\"\n                value={username}\n                onChange={handleUsernameChange}\n              />\n              <span className=\"popup__input-error\" id=\"user-name-error\"></span>\n              <input\n                type=\"text\"\n                className=\"popup__input popup__input_type_regalia\"\n                placeholder=\"Род деятельности\"\n                name=\"user-regalia\"\n                required\n                minLength=\"2\"\n                maxLength=\"200\"\n                id=\"user-regalia\"\n                value={description}\n                onChange={handleDescriptionChange}\n              />\n              <span className=\"popup__input-error\" id=\"user-regalia-error\"></span>\n          </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport currentUserContext from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup(props) {\n\n  // const [avatarLink, setAvatarLink] = React.useState('');\n\n  const avatarInputRef = React.useRef('');\n\n  // const thisUser = React.useContext(currentUserContext);\n\n  // React.useEffect(() => {\n  //   setAvatarLink(thisUser.avatar);\n  // }, [thisUser]);\n\n  // function handleAvatarInputChange(e) {\n  //   setAvatarLink(avatarInputRef.current.value);\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarInputRef.current.value\n    })\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Изменить аватар\"\n      name=\"change-avatar\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"url\"\n        className=\"popup__input popup__input_type_avatar-link\"\n        placeholder=\"Ссылка на аву\"\n        name=\"avatar-link\"\n        required\n        id=\"avatar-link\"\n        ref={avatarInputRef}\n\n      />\n      <span\n        className=\"popup__input-error\"\n        id=\"avatar-link-error\">\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n\n  const cardNameInputRef = React.useRef('');\n  const cardLinkInputRef = React.useRef('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onAddPlace({\n      name: cardNameInputRef.current.value,\n      link: cardLinkInputRef.current.value\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Новое место\"\n      name=\"add-new-card\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"popup__input popup__input_type_card-title\"\n        placeholder=\"Название картинки\"\n        name=\"card-title\"\n        required\n        maxLength=\"30\"\n        id=\"card-title\"\n        ref={cardNameInputRef}\n      />\n      <span\n        className=\"popup__input-error\"\n        id=\"card-title-error\">\n      </span>\n      <input\n        type=\"url\"\n        className=\"popup__input popup__input_type_card-link\"\n        placeholder=\"Ссылка на картинку\"\n        name=\"card-link\"\n        required\n        id=\"card-link\"\n        ref={cardLinkInputRef}\n      />\n      <span\n        className=\"popup__input-error\"\n        id=\"card-link-error\">\n      </span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithImage from './PopupWithImage';\nimport api from '../utils/Api';\nimport currentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n\n  // ! создаем переменную состояния для задания контекста\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: '',\n    avatar: '',\n    _id: ''\n  });\n\n  // ! используем эффект, чтобы загрузить с сервера первоначальные данные юзера и записать хи в currentUser\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then(data => {\n        setCurrentUser(data);\n      })\n      .catch(err => console.error(`Ошибка при получении данных профиля: ${err}`))\n  }, []);\n\n    // ! объявляем переменную состояния, в которую будет приходить массив карточек\n    const [cards, setCards] = React.useState([]);\n\n    // ! при монтировании элемента в переменную cards из API приходит массив карточек\n    React.useEffect(() => {\n      api.getInitialCards()\n        .then(data => {\n          setCards(data);\n        })\n        .catch(err => console.error(`Ошибочка вышла - ${err}`));\n    }, []);\n  \n    // ! объявляем функцию лайка/отзыва лайка\n    function handleCardLike(card) {\n\n      // ! Снова проверяем, есть ли уже лайк на этой карточке\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\n      \n      // ! Отправляем запрос в API и получаем обновлённые данные карточки\n      api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          // ! Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n          setCards(newCards);\n        })\n        .catch(err => console.error(`Ошибка добавления лайка: ${err}`))\n    }\n  \n    function handleCardDelete(card) {\n      api.deleteCard(card._id)\n        .then((cardForDeleting) => {\n          const cardsWithoutACard = cards.filter((c) => {\n            if (c._id !== card._id) {\n              return c;\n            }\n          })\n          setCards(cardsWithoutACard);\n        })\n        .catch(err => console.error(`Ошибка удаления карточки: ${err}`))\n    }\n\n  // ! создаем переменные состояния для открытия попапов с формой\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  // ! пишем функции изменения состояния переменных для открытия попапов с формой\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  // ! создаем переменную состояния для открытия фотки\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  // ! пишем функцию изменения состояния переменной для открытия попапа с фото\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // ! пишем функцию закрытия попапа\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  // ! функция обновления данных профиля\n  function handleUpdateUser(currentUser) {\n    api.editProfile(currentUser)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.error(`Ошибка при редактировании данных профиля: ${err}`));\n  }\n\n  function handleUpdateAvatar(currentUser) {\n    api.changeAvatar(currentUser)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.error(`Ошибка при редактировании аватара: ${err}`));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.addNewCard(card)\n      .then(data => {\n        setCards([data, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.error(`Ошибка при добавлении изображения: ${err}`));\n  }\n\n  return (\n    // ! оборачиваем все приложение в провайдер контекста\n    <currentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__content\">\n          <Header />\n          <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          <Footer />\n                \n          {/* попап редактирования профиля */}\n\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n\n          {/* попап редактирования аватара */}\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          {/* попап добавления новой карточки */}\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          {/* попап подтверждения удаления. его оформим в виде компонента позже */}\n          <div className=\"popup popup_type_submit\">\n\n            <div className=\"popup__container\">\n              <button className=\"popup__close-button popup__close-button_type_popup-with-forms\" type=\"button\"></button>\n              <h3 className=\"popup__title\">Вы уверены?</h3>\n              <button type=\"submit\" className=\"popup__submit\" value=\"Да\" name=\"submit\">Да</button>\n            </div>\n\n          </div>\n\n          {/* попап с картинкой */}\n          {selectedCard &&\n            <PopupWithImage\n              card={selectedCard}\n              onClose={closeAllPopups}\n            />\n          }\n\n        </div>\n      </div>\n    </currentUserContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}